/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.1.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: Motor.i

package Motor

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef long long swig_type_9;
typedef long long swig_type_10;
typedef long long swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef long long swig_type_14;
typedef long long swig_type_15;
typedef long long swig_type_16;
extern void _wrap_Swig_free_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_Motor_e57f1140cd8d6f73(swig_intgo arg1);
extern swig_intgo _wrap_getch_Motor_e57f1140cd8d6f73(void);
extern swig_intgo _wrap_kbhit_Motor_e57f1140cd8d6f73(void);
extern swig_intgo _wrap_PortHandler_DEFAULT_BAUDRATE__PortHandler_Motor_e57f1140cd8d6f73(void);
extern uintptr_t _wrap_PortHandler_getPortHandler_Motor_e57f1140cd8d6f73(swig_type_1 arg1);
extern void _wrap_PortHandler_is_using__set_Motor_e57f1140cd8d6f73(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_PortHandler_is_using__get_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern void _wrap_delete_PortHandler_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern _Bool _wrap_PortHandler_openPort_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern void _wrap_PortHandler_closePort_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern void _wrap_PortHandler_clearPort_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern void _wrap_PortHandler_setPortName_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_type_2 arg2);
extern swig_type_3 _wrap_PortHandler_getPortName_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern _Bool _wrap_PortHandler_setBaudRate_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_PortHandler_getBaudRate_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern swig_intgo _wrap_PortHandler_getBytesAvailable_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern swig_intgo _wrap_PortHandler_readPort_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_voidp arg2, swig_intgo arg3);
extern swig_intgo _wrap_PortHandler_writePort_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_voidp arg2, swig_intgo arg3);
extern void _wrap_PortHandler_setPacketTimeout__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_PortHandler_setPacketTimeout__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, double arg2);
extern _Bool _wrap_PortHandler_isPacketTimeout_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern uintptr_t _wrap_new_PortHandlerLinux_Motor_e57f1140cd8d6f73(swig_type_4 arg1);
extern void _wrap_delete_PortHandlerLinux_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern _Bool _wrap_PortHandlerLinux_openPort_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern void _wrap_PortHandlerLinux_closePort_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern void _wrap_PortHandlerLinux_clearPort_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern void _wrap_PortHandlerLinux_setPortName_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_type_5 arg2);
extern swig_type_6 _wrap_PortHandlerLinux_getPortName_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern _Bool _wrap_PortHandlerLinux_setBaudRate_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_PortHandlerLinux_getBaudRate_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern swig_intgo _wrap_PortHandlerLinux_getBytesAvailable_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern swig_intgo _wrap_PortHandlerLinux_readPort_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_voidp arg2, swig_intgo arg3);
extern swig_intgo _wrap_PortHandlerLinux_writePort_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_voidp arg2, swig_intgo arg3);
extern void _wrap_PortHandlerLinux_setPacketTimeout__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_PortHandlerLinux_setPacketTimeout__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, double arg2);
extern _Bool _wrap_PortHandlerLinux_isPacketTimeout_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern uintptr_t _wrap_PortHandlerLinux_getPortHandler_Motor_e57f1140cd8d6f73(swig_type_1 arg1);
extern void _wrap_SetPortHandlerLinux_Is_using__Motor_e57f1140cd8d6f73(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetPortHandlerLinux_Is_using__Motor_e57f1140cd8d6f73(uintptr_t _swig_base);
extern uintptr_t _wrap_PacketHandler_getPacketHandler__SWIG_0_Motor_e57f1140cd8d6f73(double arg1);
extern uintptr_t _wrap_PacketHandler_getPacketHandler__SWIG_1_Motor_e57f1140cd8d6f73(void);
extern void _wrap_delete_PacketHandler_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern double _wrap_PacketHandler_getProtocolVersion_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern swig_type_7 _wrap_PacketHandler_getTxRxResult_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_intgo arg2);
extern swig_type_8 _wrap_PacketHandler_getRxPacketError_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_PacketHandler_txPacket_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3);
extern swig_intgo _wrap_PacketHandler_rxPacket_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3);
extern swig_intgo _wrap_PacketHandler_txRxPacket__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3, swig_voidp arg4, swig_voidp arg5);
extern swig_intgo _wrap_PacketHandler_txRxPacket__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3, swig_voidp arg4);
extern swig_intgo _wrap_PacketHandler_ping__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_PacketHandler_ping__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_PacketHandler_ping__SWIG_2_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4, swig_voidp arg5);
extern swig_intgo _wrap_PacketHandler_ping__SWIG_3_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_PacketHandler_broadcastPing_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern swig_intgo _wrap_PacketHandler_action_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_PacketHandler_reboot__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_PacketHandler_reboot__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_PacketHandler_clearMultiTurn__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_PacketHandler_clearMultiTurn__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_PacketHandler_factoryReset__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5);
extern swig_intgo _wrap_PacketHandler_factoryReset__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_PacketHandler_factoryReset__SWIG_2_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_PacketHandler_readTx_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5);
extern swig_intgo _wrap_PacketHandler_readRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5, swig_voidp arg6);
extern swig_intgo _wrap_PacketHandler_readRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5);
extern swig_intgo _wrap_PacketHandler_readTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6, swig_voidp arg7);
extern swig_intgo _wrap_PacketHandler_readTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_PacketHandler_read1ByteTx_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_PacketHandler_read1ByteRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4, swig_voidp arg5);
extern swig_intgo _wrap_PacketHandler_read1ByteRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_PacketHandler_read1ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5, swig_voidp arg6);
extern swig_intgo _wrap_PacketHandler_read1ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5);
extern swig_intgo _wrap_PacketHandler_read2ByteTx_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_PacketHandler_read2ByteRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4, swig_voidp arg5);
extern swig_intgo _wrap_PacketHandler_read2ByteRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_PacketHandler_read2ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5, swig_voidp arg6);
extern swig_intgo _wrap_PacketHandler_read2ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5);
extern swig_intgo _wrap_PacketHandler_read4ByteTx_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_PacketHandler_read4ByteRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4, swig_voidp arg5);
extern swig_intgo _wrap_PacketHandler_read4ByteRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_PacketHandler_read4ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5, swig_voidp arg6);
extern swig_intgo _wrap_PacketHandler_read4ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5);
extern swig_intgo _wrap_PacketHandler_writeTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_PacketHandler_writeTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6, swig_voidp arg7);
extern swig_intgo _wrap_PacketHandler_writeTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_PacketHandler_write1ByteTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5);
extern swig_intgo _wrap_PacketHandler_write1ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_PacketHandler_write1ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5);
extern swig_intgo _wrap_PacketHandler_write2ByteTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5);
extern swig_intgo _wrap_PacketHandler_write2ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_PacketHandler_write2ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5);
extern swig_intgo _wrap_PacketHandler_write4ByteTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_type_9 arg5);
extern swig_intgo _wrap_PacketHandler_write4ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_type_10 arg5, swig_voidp arg6);
extern swig_intgo _wrap_PacketHandler_write4ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_type_11 arg5);
extern swig_intgo _wrap_PacketHandler_regWriteTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_PacketHandler_regWriteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6, swig_voidp arg7);
extern swig_intgo _wrap_PacketHandler_regWriteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_PacketHandler_syncReadTx_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5, swig_intgo arg6);
extern swig_intgo _wrap_PacketHandler_syncWriteTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5, swig_intgo arg6);
extern swig_intgo _wrap_PacketHandler_bulkReadTx_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3, swig_intgo arg4);
extern swig_intgo _wrap_PacketHandler_bulkWriteTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3, swig_intgo arg4);
extern uintptr_t _wrap_Protocol2PacketHandler_getInstance_Motor_e57f1140cd8d6f73(void);
extern void _wrap_delete_Protocol2PacketHandler_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern double _wrap_Protocol2PacketHandler_getProtocolVersion_Motor_e57f1140cd8d6f73(uintptr_t arg1);
extern swig_type_12 _wrap_Protocol2PacketHandler_getTxRxResult_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_intgo arg2);
extern swig_type_13 _wrap_Protocol2PacketHandler_getRxPacketError_Motor_e57f1140cd8d6f73(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Protocol2PacketHandler_txPacket_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3);
extern swig_intgo _wrap_Protocol2PacketHandler_rxPacket_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3);
extern swig_intgo _wrap_Protocol2PacketHandler_txRxPacket__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3, swig_voidp arg4, swig_voidp arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_txRxPacket__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3, swig_voidp arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_ping__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_ping__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_Protocol2PacketHandler_ping__SWIG_2_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4, swig_voidp arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_ping__SWIG_3_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_broadcastPing_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern swig_intgo _wrap_Protocol2PacketHandler_action_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_Protocol2PacketHandler_reboot__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_reboot__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_Protocol2PacketHandler_clearMultiTurn__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_clearMultiTurn__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_Protocol2PacketHandler_factoryReset__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_factoryReset__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_readTx_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_readRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5, swig_voidp arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_readRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_readTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6, swig_voidp arg7);
extern swig_intgo _wrap_Protocol2PacketHandler_readTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_read1ByteTx_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_read1ByteRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4, swig_voidp arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_read1ByteRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_read1ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5, swig_voidp arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_read1ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_read2ByteTx_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_read2ByteRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4, swig_voidp arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_read2ByteRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_read2ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5, swig_voidp arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_read2ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_read4ByteTx_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_read4ByteRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4, swig_voidp arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_read4ByteRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_voidp arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_read4ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5, swig_voidp arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_read4ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_writeTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_writeTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6, swig_voidp arg7);
extern swig_intgo _wrap_Protocol2PacketHandler_writeTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_write1ByteTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_write1ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_write1ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_write2ByteTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_write2ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_write2ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_write4ByteTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_type_14 arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_write4ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_type_15 arg5, swig_voidp arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_write4ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_type_16 arg5);
extern swig_intgo _wrap_Protocol2PacketHandler_regWriteTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_regWriteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6, swig_voidp arg7);
extern swig_intgo _wrap_Protocol2PacketHandler_regWriteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_syncReadTx_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5, swig_intgo arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_syncWriteTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5, swig_intgo arg6);
extern swig_intgo _wrap_Protocol2PacketHandler_bulkReadTx_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3, swig_intgo arg4);
extern swig_intgo _wrap_Protocol2PacketHandler_bulkWriteTxOnly_Motor_e57f1140cd8d6f73(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3, swig_intgo arg4);
extern uintptr_t _wrap_Protocol2PacketHandler_getPacketHandler__SWIG_0_Motor_e57f1140cd8d6f73(double arg1);
extern uintptr_t _wrap_Protocol2PacketHandler_getPacketHandler__SWIG_1_Motor_e57f1140cd8d6f73(void);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_Motor_e57f1140cd8d6f73(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func Getch() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_getch_Motor_e57f1140cd8d6f73())
	return swig_r
}

func Kbhit() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_kbhit_Motor_e57f1140cd8d6f73())
	return swig_r
}

type SwigcptrPortHandler uintptr

func (p SwigcptrPortHandler) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPortHandler) SwigIsPortHandler() {
}

func _swig_getPortHandler_PortHandler_DEFAULT_BAUDRATE__PortHandler() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_PortHandler_DEFAULT_BAUDRATE__PortHandler_Motor_e57f1140cd8d6f73())
	return swig_r
}

var PortHandlerDEFAULT_BAUDRATE_ int = _swig_getPortHandler_PortHandler_DEFAULT_BAUDRATE__PortHandler()
func PortHandlerGetPortHandler(arg1 string) (_swig_ret PortHandler) {
	var swig_r PortHandler
	_swig_i_0 := arg1
	swig_r = (PortHandler)(SwigcptrPortHandler(C._wrap_PortHandler_getPortHandler_Motor_e57f1140cd8d6f73(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (arg1 SwigcptrPortHandler) SetIs_using_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PortHandler_is_using__set_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrPortHandler) GetIs_using_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_PortHandler_is_using__get_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeletePortHandler(arg1 PortHandler) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_PortHandler_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPortHandler) OpenPort() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_PortHandler_openPort_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPortHandler) ClosePort() {
	_swig_i_0 := arg1
	C._wrap_PortHandler_closePort_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPortHandler) ClearPort() {
	_swig_i_0 := arg1
	C._wrap_PortHandler_clearPort_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPortHandler) SetPortName(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PortHandler_setPortName_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPortHandler) GetPortName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PortHandler_getPortName_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrPortHandler) SetBaudRate(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_PortHandler_setBaudRate_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrPortHandler) GetBaudRate() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_PortHandler_getBaudRate_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPortHandler) GetBytesAvailable() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_PortHandler_getBytesAvailable_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPortHandler) ReadPort(arg2 *int, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_PortHandler_readPort_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPortHandler) WritePort(arg2 *int, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_PortHandler_writePort_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPortHandler) SetPacketTimeout__SWIG_0(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PortHandler_setPacketTimeout__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPortHandler) SetPacketTimeout__SWIG_1(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PortHandler_setPacketTimeout__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (p SwigcptrPortHandler) SetPacketTimeout(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		p.SetPacketTimeout__SWIG_0(a[0].(int))
		return
	}
check_1:
	if argc == 1 {
		p.SetPacketTimeout__SWIG_1(a[0].(float64))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPortHandler) IsPacketTimeout() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_PortHandler_isPacketTimeout_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0)))
	return swig_r
}

type PortHandler interface {
	Swigcptr() uintptr
	SwigIsPortHandler()
	SetIs_using_(arg2 bool)
	GetIs_using_() (_swig_ret bool)
	OpenPort() (_swig_ret bool)
	ClosePort()
	ClearPort()
	SetPortName(arg2 string)
	GetPortName() (_swig_ret string)
	SetBaudRate(arg2 int) (_swig_ret bool)
	GetBaudRate() (_swig_ret int)
	GetBytesAvailable() (_swig_ret int)
	ReadPort(arg2 *int, arg3 int) (_swig_ret int)
	WritePort(arg2 *int, arg3 int) (_swig_ret int)
	SetPacketTimeout(a ...interface{})
	IsPacketTimeout() (_swig_ret bool)
}

type SwigcptrPortHandlerLinux uintptr

func (p SwigcptrPortHandlerLinux) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPortHandlerLinux) SwigIsPortHandlerLinux() {
}

func (p SwigcptrPortHandlerLinux) DirectorInterface() interface{} {
	return nil
}

func NewPortHandlerLinux(arg1 string) (_swig_ret PortHandlerLinux) {
	var swig_r PortHandlerLinux
	_swig_i_0 := arg1
	swig_r = (PortHandlerLinux)(SwigcptrPortHandlerLinux(C._wrap_new_PortHandlerLinux_Motor_e57f1140cd8d6f73(*(*C.swig_type_4)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DeletePortHandlerLinux(arg1 PortHandlerLinux) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_PortHandlerLinux_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPortHandlerLinux) OpenPort() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_PortHandlerLinux_openPort_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPortHandlerLinux) ClosePort() {
	_swig_i_0 := arg1
	C._wrap_PortHandlerLinux_closePort_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPortHandlerLinux) ClearPort() {
	_swig_i_0 := arg1
	C._wrap_PortHandlerLinux_clearPort_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPortHandlerLinux) SetPortName(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PortHandlerLinux_setPortName_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPortHandlerLinux) GetPortName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PortHandlerLinux_getPortName_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrPortHandlerLinux) SetBaudRate(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_PortHandlerLinux_setBaudRate_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrPortHandlerLinux) GetBaudRate() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_PortHandlerLinux_getBaudRate_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPortHandlerLinux) GetBytesAvailable() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_PortHandlerLinux_getBytesAvailable_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPortHandlerLinux) ReadPort(arg2 *int, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_PortHandlerLinux_readPort_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPortHandlerLinux) WritePort(arg2 *int, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_PortHandlerLinux_writePort_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPortHandlerLinux) SetPacketTimeout__SWIG_0(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PortHandlerLinux_setPacketTimeout__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPortHandlerLinux) SetPacketTimeout__SWIG_1(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PortHandlerLinux_setPacketTimeout__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (p SwigcptrPortHandlerLinux) SetPacketTimeout(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		p.SetPacketTimeout__SWIG_0(a[0].(int))
		return
	}
check_1:
	if argc == 1 {
		p.SetPacketTimeout__SWIG_1(a[0].(float64))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPortHandlerLinux) IsPacketTimeout() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_PortHandlerLinux_isPacketTimeout_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func PortHandlerLinuxGetPortHandler(arg1 string) (_swig_ret PortHandler) {
	var swig_r PortHandler
	_swig_i_0 := arg1
	swig_r = (PortHandler)(SwigcptrPortHandler(C._wrap_PortHandlerLinux_getPortHandler_Motor_e57f1140cd8d6f73(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (_swig_base SwigcptrPortHandlerLinux) SetIs_using_(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetPortHandlerLinux_Is_using__Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrPortHandlerLinux) GetIs_using_() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetPortHandlerLinux_Is_using__Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrPortHandlerLinux) SwigIsPortHandler() {
}

func (p SwigcptrPortHandlerLinux) SwigGetPortHandler() PortHandler {
	return SwigcptrPortHandler(p.Swigcptr())
}

type PortHandlerLinux interface {
	Swigcptr() uintptr
	SwigIsPortHandlerLinux()
	DirectorInterface() interface{}
	OpenPort() (_swig_ret bool)
	ClosePort()
	ClearPort()
	SetPortName(arg2 string)
	GetPortName() (_swig_ret string)
	SetBaudRate(arg2 int) (_swig_ret bool)
	GetBaudRate() (_swig_ret int)
	GetBytesAvailable() (_swig_ret int)
	ReadPort(arg2 *int, arg3 int) (_swig_ret int)
	WritePort(arg2 *int, arg3 int) (_swig_ret int)
	SetPacketTimeout(a ...interface{})
	IsPacketTimeout() (_swig_ret bool)
	SetIs_using_(arg1 bool)
	GetIs_using_() (_swig_ret bool)
	SwigIsPortHandler()
	SwigGetPortHandler() PortHandler
}

const BROADCAST_ID int = 0xFE
const MAX_ID int = 0xFC
const INST_PING int = 1
const INST_READ int = 2
const INST_WRITE int = 3
const INST_REG_WRITE int = 4
const INST_ACTION int = 5
const INST_FACTORY_RESET int = 6
const INST_SYNC_WRITE int = 131
const INST_BULK_READ int = 146
const INST_REBOOT int = 8
const INST_CLEAR int = 16
const INST_STATUS int = 85
const INST_SYNC_READ int = 130
const INST_BULK_WRITE int = 147
const COMM_SUCCESS int = 0
const COMM_PORT_BUSY int = -1000
const COMM_TX_FAIL int = -1001
const COMM_RX_FAIL int = -1002
const COMM_TX_ERROR int = -2000
const COMM_RX_WAITING int = -3000
const COMM_RX_TIMEOUT int = -3001
const COMM_RX_CORRUPT int = -3002
const COMM_NOT_AVAILABLE int = -9000
type SwigcptrPacketHandler uintptr

func (p SwigcptrPacketHandler) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPacketHandler) SwigIsPacketHandler() {
}

func PacketHandlerGetPacketHandler__SWIG_0(arg1 float64) (_swig_ret PacketHandler) {
	var swig_r PacketHandler
	_swig_i_0 := arg1
	swig_r = (PacketHandler)(SwigcptrPacketHandler(C._wrap_PacketHandler_getPacketHandler__SWIG_0_Motor_e57f1140cd8d6f73(C.double(_swig_i_0))))
	return swig_r
}

func PacketHandlerGetPacketHandler__SWIG_1() (_swig_ret PacketHandler) {
	var swig_r PacketHandler
	swig_r = (PacketHandler)(SwigcptrPacketHandler(C._wrap_PacketHandler_getPacketHandler__SWIG_1_Motor_e57f1140cd8d6f73()))
	return swig_r
}

func PacketHandlerGetPacketHandler(a ...interface{}) PacketHandler {
	argc := len(a)
	if argc == 0 {
		return PacketHandlerGetPacketHandler__SWIG_1()
	}
	if argc == 1 {
		return PacketHandlerGetPacketHandler__SWIG_0(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

func DeletePacketHandler(arg1 PacketHandler) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_PacketHandler_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPacketHandler) GetProtocolVersion() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_PacketHandler_getProtocolVersion_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) GetTxRxResult(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_PacketHandler_getTxRxResult_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrPacketHandler) GetRxPacketError(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_PacketHandler_getRxPacketError_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrPacketHandler) TxPacket(arg2 PortHandler, arg3 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_PacketHandler_txPacket_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) RxPacket(arg2 PortHandler, arg3 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_PacketHandler_rxPacket_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) TxRxPacket__SWIG_0(arg2 PortHandler, arg3 *int, arg4 *int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_txRxPacket__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) TxRxPacket__SWIG_1(arg2 PortHandler, arg3 *int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_txRxPacket__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (p SwigcptrPacketHandler) TxRxPacket(a ...interface{}) int {
	argc := len(a)
	if argc == 3 {
		return p.TxRxPacket__SWIG_1(a[0].(PortHandler), a[1].(*int), a[2].(*int))
	}
	if argc == 4 {
		return p.TxRxPacket__SWIG_0(a[0].(PortHandler), a[1].(*int), a[2].(*int), a[3].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) Ping__SWIG_0(arg2 PortHandler, arg3 int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_ping__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Ping__SWIG_1(arg2 PortHandler, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_PacketHandler_ping__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Ping__SWIG_2(arg2 PortHandler, arg3 int, arg4 *int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_ping__SWIG_2_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Ping__SWIG_3(arg2 PortHandler, arg3 int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_ping__SWIG_3_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (p SwigcptrPacketHandler) Ping(a ...interface{}) int {
	argc := len(a)
	if argc == 2 {
		return p.Ping__SWIG_1(a[0].(PortHandler), a[1].(int))
	}
	if argc == 3 {
		return p.Ping__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(*int))
	}
	if argc == 3 {
		return p.Ping__SWIG_3(a[0].(PortHandler), a[1].(int), a[2].(*int))
	}
	if argc == 4 {
		return p.Ping__SWIG_2(a[0].(PortHandler), a[1].(int), a[2].(*int), a[3].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) BroadcastPing(arg2 PortHandler, arg3 Std_vector_Sl_uint8_t_Sg_) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (int)(C._wrap_PacketHandler_broadcastPing_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Action(arg2 PortHandler, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_PacketHandler_action_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Reboot__SWIG_0(arg2 PortHandler, arg3 int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_reboot__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Reboot__SWIG_1(arg2 PortHandler, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_PacketHandler_reboot__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (p SwigcptrPacketHandler) Reboot(a ...interface{}) int {
	argc := len(a)
	if argc == 2 {
		return p.Reboot__SWIG_1(a[0].(PortHandler), a[1].(int))
	}
	if argc == 3 {
		return p.Reboot__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) ClearMultiTurn__SWIG_0(arg2 PortHandler, arg3 int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_clearMultiTurn__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) ClearMultiTurn__SWIG_1(arg2 PortHandler, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_PacketHandler_clearMultiTurn__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (p SwigcptrPacketHandler) ClearMultiTurn(a ...interface{}) int {
	argc := len(a)
	if argc == 2 {
		return p.ClearMultiTurn__SWIG_1(a[0].(PortHandler), a[1].(int))
	}
	if argc == 3 {
		return p.ClearMultiTurn__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) FactoryReset__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_factoryReset__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) FactoryReset__SWIG_1(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_factoryReset__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) FactoryReset__SWIG_2(arg2 PortHandler, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_PacketHandler_factoryReset__SWIG_2_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (p SwigcptrPacketHandler) FactoryReset(a ...interface{}) int {
	argc := len(a)
	if argc == 2 {
		return p.FactoryReset__SWIG_2(a[0].(PortHandler), a[1].(int))
	}
	if argc == 3 {
		return p.FactoryReset__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int))
	}
	if argc == 4 {
		return p.FactoryReset__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) ReadTx(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_readTx_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) ReadRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_readRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) ReadRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_readRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (p SwigcptrPacketHandler) ReadRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.ReadRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int))
	}
	if argc == 5 {
		return p.ReadRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) ReadTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int, arg7 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (int)(C._wrap_PacketHandler_readTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) ReadTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_readTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (p SwigcptrPacketHandler) ReadTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 5 {
		return p.ReadTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int))
	}
	if argc == 6 {
		return p.ReadTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int), a[5].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) Read1ByteTx(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_read1ByteTx_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Read1ByteRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 *int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_read1ByteRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Read1ByteRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_read1ByteRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (p SwigcptrPacketHandler) Read1ByteRx(a ...interface{}) int {
	argc := len(a)
	if argc == 3 {
		return p.Read1ByteRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(*int))
	}
	if argc == 4 {
		return p.Read1ByteRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(*int), a[3].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) Read1ByteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_read1ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Read1ByteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_read1ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (p SwigcptrPacketHandler) Read1ByteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.Read1ByteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int))
	}
	if argc == 5 {
		return p.Read1ByteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) Read2ByteTx(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_read2ByteTx_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Read2ByteRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 *int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_read2ByteRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Read2ByteRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_read2ByteRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (p SwigcptrPacketHandler) Read2ByteRx(a ...interface{}) int {
	argc := len(a)
	if argc == 3 {
		return p.Read2ByteRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(*int))
	}
	if argc == 4 {
		return p.Read2ByteRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(*int), a[3].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) Read2ByteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_read2ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Read2ByteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_read2ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (p SwigcptrPacketHandler) Read2ByteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.Read2ByteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int))
	}
	if argc == 5 {
		return p.Read2ByteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) Read4ByteTx(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_read4ByteTx_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Read4ByteRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 *int64, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_read4ByteRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Read4ByteRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 *int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_read4ByteRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (p SwigcptrPacketHandler) Read4ByteRx(a ...interface{}) int {
	argc := len(a)
	if argc == 3 {
		return p.Read4ByteRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(*int64))
	}
	if argc == 4 {
		return p.Read4ByteRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(*int64), a[3].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) Read4ByteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 *int64, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_read4ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Read4ByteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 *int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_read4ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (p SwigcptrPacketHandler) Read4ByteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.Read4ByteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int64))
	}
	if argc == 5 {
		return p.Read4ByteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int64), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) WriteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_writeTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) WriteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int, arg7 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (int)(C._wrap_PacketHandler_writeTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) WriteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_writeTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (p SwigcptrPacketHandler) WriteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 5 {
		return p.WriteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int))
	}
	if argc == 6 {
		return p.WriteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int), a[5].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) Write1ByteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_write1ByteTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Write1ByteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_write1ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Write1ByteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_write1ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	return swig_r
}

func (p SwigcptrPacketHandler) Write1ByteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.Write1ByteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int))
	}
	if argc == 5 {
		return p.Write1ByteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) Write2ByteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_write2ByteTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Write2ByteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_write2ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Write2ByteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_write2ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	return swig_r
}

func (p SwigcptrPacketHandler) Write2ByteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.Write2ByteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int))
	}
	if argc == 5 {
		return p.Write2ByteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) Write4ByteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_write4ByteTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_type_9(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Write4ByteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 int64, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_write4ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_type_10(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) Write4ByteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_PacketHandler_write4ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_type_11(_swig_i_4)))
	return swig_r
}

func (p SwigcptrPacketHandler) Write4ByteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.Write4ByteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int64))
	}
	if argc == 5 {
		return p.Write4ByteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int64), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) RegWriteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_regWriteTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) RegWriteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int, arg7 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (int)(C._wrap_PacketHandler_regWriteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) RegWriteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_regWriteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (p SwigcptrPacketHandler) RegWriteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 5 {
		return p.RegWriteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int))
	}
	if argc == 6 {
		return p.RegWriteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int), a[5].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPacketHandler) SyncReadTx(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_syncReadTx_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_intgo(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) SyncWriteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_PacketHandler_syncWriteTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_intgo(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) BulkReadTx(arg2 PortHandler, arg3 *int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_bulkReadTx_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrPacketHandler) BulkWriteTxOnly(arg2 PortHandler, arg3 *int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_PacketHandler_bulkWriteTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

type PacketHandler interface {
	Swigcptr() uintptr
	SwigIsPacketHandler()
	GetProtocolVersion() (_swig_ret float64)
	GetTxRxResult(arg2 int) (_swig_ret string)
	GetRxPacketError(arg2 int) (_swig_ret string)
	TxPacket(arg2 PortHandler, arg3 *int) (_swig_ret int)
	RxPacket(arg2 PortHandler, arg3 *int) (_swig_ret int)
	TxRxPacket(a ...interface{}) int
	Ping(a ...interface{}) int
	BroadcastPing(arg2 PortHandler, arg3 Std_vector_Sl_uint8_t_Sg_) (_swig_ret int)
	Action(arg2 PortHandler, arg3 int) (_swig_ret int)
	Reboot(a ...interface{}) int
	ClearMultiTurn(a ...interface{}) int
	FactoryReset(a ...interface{}) int
	ReadTx(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int)
	ReadRx(a ...interface{}) int
	ReadTxRx(a ...interface{}) int
	Read1ByteTx(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int)
	Read1ByteRx(a ...interface{}) int
	Read1ByteTxRx(a ...interface{}) int
	Read2ByteTx(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int)
	Read2ByteRx(a ...interface{}) int
	Read2ByteTxRx(a ...interface{}) int
	Read4ByteTx(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int)
	Read4ByteRx(a ...interface{}) int
	Read4ByteTxRx(a ...interface{}) int
	WriteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int)
	WriteTxRx(a ...interface{}) int
	Write1ByteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int)
	Write1ByteTxRx(a ...interface{}) int
	Write2ByteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int)
	Write2ByteTxRx(a ...interface{}) int
	Write4ByteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int64) (_swig_ret int)
	Write4ByteTxRx(a ...interface{}) int
	RegWriteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int)
	RegWriteTxRx(a ...interface{}) int
	SyncReadTx(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 int) (_swig_ret int)
	SyncWriteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 int) (_swig_ret int)
	BulkReadTx(arg2 PortHandler, arg3 *int, arg4 int) (_swig_ret int)
	BulkWriteTxOnly(arg2 PortHandler, arg3 *int, arg4 int) (_swig_ret int)
}

type SwigcptrProtocol2PacketHandler uintptr

func (p SwigcptrProtocol2PacketHandler) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrProtocol2PacketHandler) SwigIsProtocol2PacketHandler() {
}

func (p SwigcptrProtocol2PacketHandler) DirectorInterface() interface{} {
	return nil
}

func Protocol2PacketHandlerGetInstance() (_swig_ret Protocol2PacketHandler) {
	var swig_r Protocol2PacketHandler
	swig_r = (Protocol2PacketHandler)(SwigcptrProtocol2PacketHandler(C._wrap_Protocol2PacketHandler_getInstance_Motor_e57f1140cd8d6f73()))
	return swig_r
}

func DeleteProtocol2PacketHandler(arg1 Protocol2PacketHandler) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Protocol2PacketHandler_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrProtocol2PacketHandler) GetProtocolVersion() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Protocol2PacketHandler_getProtocolVersion_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) GetTxRxResult(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Protocol2PacketHandler_getTxRxResult_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrProtocol2PacketHandler) GetRxPacketError(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Protocol2PacketHandler_getRxPacketError_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrProtocol2PacketHandler) TxPacket(arg2 PortHandler, arg3 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Protocol2PacketHandler_txPacket_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) RxPacket(arg2 PortHandler, arg3 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Protocol2PacketHandler_rxPacket_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) TxRxPacket__SWIG_0(arg2 PortHandler, arg3 *int, arg4 *int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_txRxPacket__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) TxRxPacket__SWIG_1(arg2 PortHandler, arg3 *int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_txRxPacket__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) TxRxPacket(a ...interface{}) int {
	argc := len(a)
	if argc == 3 {
		return p.TxRxPacket__SWIG_1(a[0].(PortHandler), a[1].(*int), a[2].(*int))
	}
	if argc == 4 {
		return p.TxRxPacket__SWIG_0(a[0].(PortHandler), a[1].(*int), a[2].(*int), a[3].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) Ping__SWIG_0(arg2 PortHandler, arg3 int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_ping__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Ping__SWIG_1(arg2 PortHandler, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Protocol2PacketHandler_ping__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Ping__SWIG_2(arg2 PortHandler, arg3 int, arg4 *int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_ping__SWIG_2_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Ping__SWIG_3(arg2 PortHandler, arg3 int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_ping__SWIG_3_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) Ping(a ...interface{}) int {
	argc := len(a)
	if argc == 2 {
		return p.Ping__SWIG_1(a[0].(PortHandler), a[1].(int))
	}
	if argc == 3 {
		return p.Ping__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(*int))
	}
	if argc == 3 {
		return p.Ping__SWIG_3(a[0].(PortHandler), a[1].(int), a[2].(*int))
	}
	if argc == 4 {
		return p.Ping__SWIG_2(a[0].(PortHandler), a[1].(int), a[2].(*int), a[3].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) BroadcastPing(arg2 PortHandler, arg3 Std_vector_Sl_uint8_t_Sg_) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (int)(C._wrap_Protocol2PacketHandler_broadcastPing_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Action(arg2 PortHandler, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Protocol2PacketHandler_action_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Reboot__SWIG_0(arg2 PortHandler, arg3 int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_reboot__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Reboot__SWIG_1(arg2 PortHandler, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Protocol2PacketHandler_reboot__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) Reboot(a ...interface{}) int {
	argc := len(a)
	if argc == 2 {
		return p.Reboot__SWIG_1(a[0].(PortHandler), a[1].(int))
	}
	if argc == 3 {
		return p.Reboot__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) ClearMultiTurn__SWIG_0(arg2 PortHandler, arg3 int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_clearMultiTurn__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) ClearMultiTurn__SWIG_1(arg2 PortHandler, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Protocol2PacketHandler_clearMultiTurn__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) ClearMultiTurn(a ...interface{}) int {
	argc := len(a)
	if argc == 2 {
		return p.ClearMultiTurn__SWIG_1(a[0].(PortHandler), a[1].(int))
	}
	if argc == 3 {
		return p.ClearMultiTurn__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) FactoryReset__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_factoryReset__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) FactoryReset__SWIG_1(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_factoryReset__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) FactoryReset(a ...interface{}) int {
	argc := len(a)
	if argc == 3 {
		return p.FactoryReset__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int))
	}
	if argc == 4 {
		return p.FactoryReset__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) ReadTx(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_readTx_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) ReadRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_readRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) ReadRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_readRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) ReadRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.ReadRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int))
	}
	if argc == 5 {
		return p.ReadRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) ReadTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int, arg7 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (int)(C._wrap_Protocol2PacketHandler_readTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) ReadTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_readTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) ReadTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 5 {
		return p.ReadTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int))
	}
	if argc == 6 {
		return p.ReadTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int), a[5].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) Read1ByteTx(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read1ByteTx_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Read1ByteRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 *int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read1ByteRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Read1ByteRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read1ByteRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) Read1ByteRx(a ...interface{}) int {
	argc := len(a)
	if argc == 3 {
		return p.Read1ByteRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(*int))
	}
	if argc == 4 {
		return p.Read1ByteRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(*int), a[3].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) Read1ByteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read1ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Read1ByteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read1ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) Read1ByteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.Read1ByteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int))
	}
	if argc == 5 {
		return p.Read1ByteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) Read2ByteTx(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read2ByteTx_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Read2ByteRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 *int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read2ByteRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Read2ByteRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read2ByteRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) Read2ByteRx(a ...interface{}) int {
	argc := len(a)
	if argc == 3 {
		return p.Read2ByteRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(*int))
	}
	if argc == 4 {
		return p.Read2ByteRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(*int), a[3].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) Read2ByteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read2ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Read2ByteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read2ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) Read2ByteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.Read2ByteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int))
	}
	if argc == 5 {
		return p.Read2ByteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) Read4ByteTx(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read4ByteTx_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Read4ByteRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 *int64, arg5 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read4ByteRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Read4ByteRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 *int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read4ByteRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) Read4ByteRx(a ...interface{}) int {
	argc := len(a)
	if argc == 3 {
		return p.Read4ByteRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(*int64))
	}
	if argc == 4 {
		return p.Read4ByteRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(*int64), a[3].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) Read4ByteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 *int64, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read4ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Read4ByteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 *int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_read4ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) Read4ByteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.Read4ByteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int64))
	}
	if argc == 5 {
		return p.Read4ByteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(*int64), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) WriteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_writeTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) WriteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int, arg7 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (int)(C._wrap_Protocol2PacketHandler_writeTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) WriteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_writeTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) WriteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 5 {
		return p.WriteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int))
	}
	if argc == 6 {
		return p.WriteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int), a[5].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) Write1ByteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_write1ByteTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Write1ByteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_write1ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Write1ByteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_write1ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) Write1ByteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.Write1ByteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int))
	}
	if argc == 5 {
		return p.Write1ByteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) Write2ByteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_write2ByteTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Write2ByteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_write2ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Write2ByteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_write2ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) Write2ByteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.Write2ByteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int))
	}
	if argc == 5 {
		return p.Write2ByteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) Write4ByteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_write4ByteTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_type_14(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Write4ByteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 int64, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_write4ByteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_type_15(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) Write4ByteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Protocol2PacketHandler_write4ByteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_type_16(_swig_i_4)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) Write4ByteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 4 {
		return p.Write4ByteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int64))
	}
	if argc == 5 {
		return p.Write4ByteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int64), a[4].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) RegWriteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_regWriteTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) RegWriteTxRx__SWIG_0(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int, arg7 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (int)(C._wrap_Protocol2PacketHandler_regWriteTxRx__SWIG_0_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) RegWriteTxRx__SWIG_1(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_regWriteTxRx__SWIG_1_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (p SwigcptrProtocol2PacketHandler) RegWriteTxRx(a ...interface{}) int {
	argc := len(a)
	if argc == 5 {
		return p.RegWriteTxRx__SWIG_1(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int))
	}
	if argc == 6 {
		return p.RegWriteTxRx__SWIG_0(a[0].(PortHandler), a[1].(int), a[2].(int), a[3].(int), a[4].(*int), a[5].(*int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProtocol2PacketHandler) SyncReadTx(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_syncReadTx_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_intgo(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) SyncWriteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Protocol2PacketHandler_syncWriteTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_intgo(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) BulkReadTx(arg2 PortHandler, arg3 *int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_bulkReadTx_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrProtocol2PacketHandler) BulkWriteTxOnly(arg2 PortHandler, arg3 *int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Protocol2PacketHandler_bulkWriteTxOnly_Motor_e57f1140cd8d6f73(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func Protocol2PacketHandlerGetPacketHandler__SWIG_0(arg1 float64) (_swig_ret PacketHandler) {
	var swig_r PacketHandler
	_swig_i_0 := arg1
	swig_r = (PacketHandler)(SwigcptrPacketHandler(C._wrap_Protocol2PacketHandler_getPacketHandler__SWIG_0_Motor_e57f1140cd8d6f73(C.double(_swig_i_0))))
	return swig_r
}

func Protocol2PacketHandlerGetPacketHandler__SWIG_1() (_swig_ret PacketHandler) {
	var swig_r PacketHandler
	swig_r = (PacketHandler)(SwigcptrPacketHandler(C._wrap_Protocol2PacketHandler_getPacketHandler__SWIG_1_Motor_e57f1140cd8d6f73()))
	return swig_r
}

func Protocol2PacketHandlerGetPacketHandler(a ...interface{}) PacketHandler {
	argc := len(a)
	if argc == 0 {
		return Protocol2PacketHandlerGetPacketHandler__SWIG_1()
	}
	if argc == 1 {
		return Protocol2PacketHandlerGetPacketHandler__SWIG_0(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

func (p SwigcptrProtocol2PacketHandler) SwigIsPacketHandler() {
}

func (p SwigcptrProtocol2PacketHandler) SwigGetPacketHandler() PacketHandler {
	return SwigcptrPacketHandler(p.Swigcptr())
}

type Protocol2PacketHandler interface {
	Swigcptr() uintptr
	SwigIsProtocol2PacketHandler()
	DirectorInterface() interface{}
	GetProtocolVersion() (_swig_ret float64)
	GetTxRxResult(arg2 int) (_swig_ret string)
	GetRxPacketError(arg2 int) (_swig_ret string)
	TxPacket(arg2 PortHandler, arg3 *int) (_swig_ret int)
	RxPacket(arg2 PortHandler, arg3 *int) (_swig_ret int)
	TxRxPacket(a ...interface{}) int
	Ping(a ...interface{}) int
	BroadcastPing(arg2 PortHandler, arg3 Std_vector_Sl_uint8_t_Sg_) (_swig_ret int)
	Action(arg2 PortHandler, arg3 int) (_swig_ret int)
	Reboot(a ...interface{}) int
	ClearMultiTurn(a ...interface{}) int
	FactoryReset(a ...interface{}) int
	ReadTx(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int)
	ReadRx(a ...interface{}) int
	ReadTxRx(a ...interface{}) int
	Read1ByteTx(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int)
	Read1ByteRx(a ...interface{}) int
	Read1ByteTxRx(a ...interface{}) int
	Read2ByteTx(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int)
	Read2ByteRx(a ...interface{}) int
	Read2ByteTxRx(a ...interface{}) int
	Read4ByteTx(arg2 PortHandler, arg3 int, arg4 int) (_swig_ret int)
	Read4ByteRx(a ...interface{}) int
	Read4ByteTxRx(a ...interface{}) int
	WriteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int)
	WriteTxRx(a ...interface{}) int
	Write1ByteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int)
	Write1ByteTxRx(a ...interface{}) int
	Write2ByteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int) (_swig_ret int)
	Write2ByteTxRx(a ...interface{}) int
	Write4ByteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int64) (_swig_ret int)
	Write4ByteTxRx(a ...interface{}) int
	RegWriteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 int, arg6 *int) (_swig_ret int)
	RegWriteTxRx(a ...interface{}) int
	SyncReadTx(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 int) (_swig_ret int)
	SyncWriteTxOnly(arg2 PortHandler, arg3 int, arg4 int, arg5 *int, arg6 int) (_swig_ret int)
	BulkReadTx(arg2 PortHandler, arg3 *int, arg4 int) (_swig_ret int)
	BulkWriteTxOnly(arg2 PortHandler, arg3 *int, arg4 int) (_swig_ret int)
	SwigIsPacketHandler()
	SwigGetPacketHandler() PacketHandler
}


type SwigcptrStd_vector_Sl_uint8_t_Sg_ uintptr
type Std_vector_Sl_uint8_t_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_uint8_t_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

